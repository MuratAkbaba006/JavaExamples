import java.util.ArrayList;
import java.util.Collection;
import java.util.EmptyStackException;

public class GenericStack<E> {
    ArrayList<E> list=new ArrayList<>();
    public boolean isEmpty(){



       return list.isEmpty();

    }

    public int  getSize(){

        return list.size();

    }


    public E Peek(){


       return list.get(getSize()-1);


    }

    public E pop(){

        if(list.isEmpty())
            throw new EmptyStackException();

        E result=list.get(getSize()-1);
        list.remove(getSize()-1);
        return result;

    }


    public void push(E item){


        list.add(item);
    }


    public static void print(GenericStack<?> stack){//tüm tipleri kabul etmek istediðimizde
        while(!stack.isEmpty())
            System.out.println(stack.pop());


    }

    public void PushAll(ArrayList<? extends E> src)
    {

        for(E e:src)
            push(e);

    }
    public void PopAll(Collection<? super E> dst)
    {
        while(!isEmpty())
            dst.add(pop());


    }

    public static void main(String[] args) {

        GenericStack<Number> stack=new GenericStack<>();
        stack.push(10);
        stack.push(20);
         ArrayList<Integer> nums=new ArrayList<>();

nums.add(-10);
nums.add(-20);
stack.PushAll(nums);

ArrayList<Object> dest=new ArrayList<>();
stack.PopAll(dest);
        System.out.println(dest.toString());
        print(stack);


    }

}
